# When would you want to use a remote repository rather than keeping all your work local?

- Working on a large project.
- Working on a collaborative project.
- Traveling.

# Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

- Don't want to upload partially fixed / working / unfinished repo


# Describe the differences between forks, clones, and branches. When would you use one instead of another?

- fork: I want to clone X's repository on github, so that I can build on top of X's work, keeping my work public, without messing up X's work.

- clone: I want a copy a github repository on my local machine.

- branch: I'm working on my own project, and I want to experiment while backing up a working version somewhere. 


# What is the benefit of having a copy of the last known state of the remote stored locally?

- the last known state helps us know whether any discrepancy between the current state of the remote and the current state of the local branch comes from changes that were made to the remote version.
- this makes it easier for users to come up with merge conflicts.


# How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

- lots of emails
- easier: no commands to learn. no worrying about branches and pulls and commits. No need to run a sequence of command every time something happens!
- harder: keeping track of versions and changes have to be done manually.